{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(timeDate)\nlibrary(scales)\nlibrary(RColorBrewer)\nlibrary(extrafont)\nlibrary(xlsx)\n\ninstall.packages(\"xlsx\")\n\n#задаем формат даты для последующего преобразования\nsetAs(\"character\", \"myDate\", function(from)\n  as.Date(from, format = \"%d.%m.%Y\"))\n\n#загрузка регистрационных данных с e-data\n#с преобразованием даты\ner <-\n  read.csv2(\n    url(\n      \"http://spending.gov.ua/documents/20182//364816548//stat_kabinet.csv\"\n    ),\n    header = TRUE,\n    sep = \";\",\n    skip = 2,\n    quote = \"\",\n    stringsAsFactors = FALSE,\n    colClasses = (c(\n      ЄДРПОУ       = \"character\",       Дата.реєстрації       = \"myDate\"\n    ))\n  )\n\n#или преобразуем дату так\n#er[[1]] <- as.Date(er[[1]], \"%d.%m.%Y\")\n\n#загрузка последнего обновления реестра\ncr <-\n  read_csv(\"case_register.csv\",\n           col_types = cols(edrpou = col_character(), reg_date = col_date(format = \"%Y-%m-%d\")))\n\n#вновь зарегистрированные предприятия\nnew <- cr[is.na(cr$reg_date),] %>%\n  filter(edrpou %in% er[[2]]) %>%\n  left_join(er, by = c(\"edrpou\" = \"ЄДРПОУ\"))\n\n#текущее обновление\ncr <-\n  within(cr, reg_date[edrpou %in% new$edrpou] <-\n           timeLastDayInMonth(new$Дата.реєстрації))\n\n#перезаписываем текущее обновление в файл\nwrite_csv(cr, \"case_register.csv\")\n\noldOpt <- options()\noptions(xlsx.date.format = \"dd.mm.yyyy\")\nwrite.xlsx(cr, \"tableau_register.xlsx\", showNA = FALSE)\noptions(oldOpt)\n\n\n?write.xlsx\n\n#=============== графика ===============#\n\nmyPal <- brewer.pal(5, \"Reds\")\n\n#всего действующих предприятий\nadp <- nrow(subset(\n  cr,\n  bankruptcy == \"зареєстровано\" &\n    !(region == \"ОРДЛО\" |\n        region == \"АР Крим\" | region == \"Севастополь\")\n))\n\n#группировка по месяцам\n#вплоть до предыдущего месяца\ncrGrouped <- cr %>%\n  filter(!is.na(reg_date) & reg_date <= Sys.Date()) %>%\n  group_by(reg_date) %>%\n  summarise(count = n())\n\n#количество регистраций накопительным итогом\ncrGrouped$cumul <- with(crGrouped, ave(count, FUN = cumsum))\n\n#преобразование в \"долгий\" формат\ncrGrouped <- crGrouped %>% mutate(cumul, nreg = adp - cumul) %>%\n  select(1, 3:4) %>%\n  gather(cumul, nreg, key = reg, value = count)\n\ncrGrouped$reg_date <-\n  as.Date(timeFirstDayInMonth(crGrouped$reg_date))\n\n\np <- ggplot(data = crGrouped, mapping = aes(width = 31)) +\n  geom_bar(\n    mapping = aes(\n      x = reg_date,\n      y = count,\n      fill = factor(reg, levels = c(\"nreg\", \"cumul\"))\n    ),\n    stat = \"identity\",\n    color = \"#FFFFFF\",\n    #процентное представление\n    position = \"fill\"\n  ) +\n  scale_fill_manual(\n    values =\n      c(myPal[2], myPal[4]),\n    labels = c(\"незареєстровані\", \"зареєстровані\")\n  ) +\n  scale_y_continuous(labels = percent) +\n  scale_x_date(labels = date_format(\"%m/%y\")) +\n  #внешний вид графика\n  theme(\n    #основной шрифт\n    text = element_text(family = \"PT Sans\", size = 19),\n    plot.title = element_text(\n      face = \"bold\",\n      margin = margin(\n        t = 0,\n        r = 20,\n        b = 20,\n        l = 20,\n        unit = \"pt\"\n      )\n    ),\n    plot.subtitle = element_text(\n      #относительный размер шрифта\n      size = rel(0.65),\n      margin = margin(\n        t = 0,\n        r = 20,\n        b = 35,\n        l = 20,\n        unit = \"pt\"\n      )\n    ),\n    plot.caption = element_text(\n      #относительный размер шрифта\n      size = rel(0.5),\n      face = \"italic\",\n      margin = margin(t = 30,\n                      b = 15,\n                      unit = \"pt\")\n    ),\n    legend.text = element_text(\n      size = rel(0.6),\n      margin = margin(\n        t = 0,\n        r = 20,\n        b = 30,\n        l = 20,\n        unit = \"pt\"\n      )\n    ),\n    axis.text.y = element_text(size = rel(0.65)),\n    axis.text.x = element_text(size = rel(0.65)),\n    #отключаем отображение отдельных элементов\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    panel.background = element_blank(),\n    axis.ticks.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.title.y = element_blank(),\n    legend.position = \"top\",\n    legend.title = element_blank(),\n    plot.margin = unit(c(45, 20, 40, 20), \"pt\")\n  ) +\n  #заголовки и подписи осей\n  labs(\n    title = \"Реєстрація ДП на e-data\",\n    caption = \"графіка проекту \\\"Ціна держави\\\" за даними http://e-data.gov.ua\",\n    subtitle = paste(\n      max(crGrouped$count[crGrouped$reg == \"cumul\"]),\n      \"компаній державного сектору із\",\n      adp,\n      \"\\nзареєстрованo на порталі публічних фінансів\\ne-data.gov.ua станом на\",\n      format(timeFirstDayInMonth(Sys.Date()), \"%d.%m.%Y\"),\n      \"року.\",\n      sep = \" \"\n    )\n  )\n\njpeg(\n  filename = \"test.jpg\",\n  width = 450,\n  height = 650,\n  units = \"px\",\n  quality = 100,\n  res = 100\n)\nplot(p)\ndev.off()\n\nlibrary(mailR)\n\npassword <- readLines(\"../password.txt\")\n\nsend.mail(from = \"wldmrgml@gmail.com\",\n          to = c(\"golomb@cci.zp.ua\"),\n          subject = \"test_subject2\",\n          body = \"test_body2\",\n          smtp = list(host.name = \"smtp.gmail.com\", port = 465, user.name = \"wldmrgml@gmail.com\", passwd = password, ssl = TRUE),\n          authenticate = TRUE,\n          send = TRUE)\n",
    "created" : 1487098332264.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2302410328",
    "id" : "4DFECB95",
    "lastKnownWriteTime" : 1487173572,
    "last_content_update" : 1487173572,
    "path" : "D:/OneDrive/myRepos/dp_on_edata/main.R",
    "project_path" : "main.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 9,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}